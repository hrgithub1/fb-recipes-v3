// Firebase Auth Service File, exports different functions (as object)
// which handle all the

// import firebase object, containing configuration
import firebase from './FirebaseConfig';

// create instance of firebase auth object.
// generated by auth():
const auth = firebase.auth();

// create functions that are exported, so to be used in any JS application

// returning promise,
const registarUser = (email, password) => {
  return auth.createUserWithEmailAndPassword(email, password);
};

// returning promise,
const loginUser = (email, password) => {
  return auth.signInWithEmailAndPassword(email, password);
};

// JWT will be 'relinguished', so can not be used again
const logoutUser = () => {
  return auth.signOut();
};

//
const sendPasswordResetEmail = (email) => {
  return auth.sendPasswordResetEmail(email);
};

// logging in with some provider (google, twitter, etc)
const loginWithGoogle = () => {
  const provider = new firebase.auth.GoogleAuthProvider();

  // ???????
  // return auth.signInWithPhoneNumber(phonenumber);
  return auth.signInWithPopup(provider);
};

// function monitoring auth changes
const subscribeToAuthChanges = (handleAuthChange) => {
  // handleAuthChange = callback function, executed when Firebase auth changes

  // arrow function is called
  auth.onAuthStateChanged((user) => {
    handleAuthChange(user);
  });
};

// wrapping all functions in object and than export
const FirebaseAuthService = {
  registarUser,
  loginUser,
  logoutUser,
  sendPasswordResetEmail,
  loginWithGoogle,
  subscribeToAuthChanges,
};

export default FirebaseAuthService;
